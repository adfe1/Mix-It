---
import MixItLayout from "../layouts/MixIt-Layout.astro";

let searchQuery = "";
let results = [];
let favorites = [];

if (Astro.request.method === "POST") {
    const bodyText = await Astro.request.text();
    const params = new URLSearchParams(bodyText);
    searchQuery = params.get("search") ?? "";

    if (searchQuery) {
        const res = await fetch(`http://localhost:8080/api/cocktails/search?query=${encodeURIComponent(searchQuery)}`);
        const data = await res.json();
        results = data.drinks ?? [];
    }
}

const favRes = await fetch('http://localhost:8080/api/favorites');
favorites = await favRes.json();
---

<MixItLayout title="Search" description="Suche nach Cocktails">
    <main>
        <div class="Search_Bar">
            <form method="post">
                <input type="text" name="search" placeholder="Suche nach Cocktails..." value={searchQuery} />
                <button type="submit" title="Search">
                    üîç
                </button>
            </form>
        </div>

        <section class="Results">
            {searchQuery && (
                    <>
                        <h2>Suchergebnisse f√ºr: "{searchQuery}"</h2>
                        {results.length > 0 ? (
                                <ul>
                                    {results.map(drink => (
                                            <li>
                                                {drink.strDrink}
                                                <form method="post" action={`/api/favorites/${drink.idDrink}`} style="display:inline;">
                                                    <button class="fav-btn" formaction={`/api/favorites/${drink.idDrink}?_method=${favorites.includes(drink.idDrink) ? "delete" : "post"}`} formmethod="post">
                                                        {favorites.includes(drink.idDrink) ? "‚òÖ Entfernen" : "‚òÜ Favorit"}
                                                    </button>
                                                </form>
                                            </li>
                                    ))}
                                </ul>
                        ) : (
                                <p>Keine Ergebnisse gefunden.</p>
                        )}
                    </>
            )}
        </section>
    </main>

    <style>
        .Search_Bar {
            max-width: 500px;
            margin: 4rem auto 2rem;
            padding: 2rem;
            border-radius: 18px;
            background: #f8fafc;
            border: 2px solid #e2e8f0;
            box-shadow: 0 6px 24px rgba(0, 0, 0, 0.1);
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .Search_Bar form {
            width: 100%;
            display: flex;
            gap: 1rem;
        }

        .Search_Bar input {
            flex: 1;
            padding: 0.7rem 1rem;
            font-size: 1.1rem;
            border-radius: 10px;
            border: 1.5px solid #bfc9d1;
        }

        .Search_Bar button {
            padding: 0.7rem 1rem;
            background: #5a77e2;
            color: white;
            border: none;
            border-radius: 10px;
            cursor: pointer;
        }

        .Results {
            max-width: 600px;
            margin: 0 auto;
            padding: 1rem;
        }

        .Results ul {
            list-style: none;
            padding: 0;
        }

        .Results li {
            padding: 0.5rem 0;
            border-bottom: 1px solid #ccc;
        }
    </style>
</MixItLayout>
